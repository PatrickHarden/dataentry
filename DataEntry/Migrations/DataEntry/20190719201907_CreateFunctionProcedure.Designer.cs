// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using dataentry.Data.DBContext;

namespace dataentry.Migrations.DataEntry
{
    [DbContext(typeof(DataEntryContext))]
    [Migration("20190719201907_CreateFunctionProcedure")]
    partial class CreateFunctionProcedure
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("dataentry.Data.DBContext.Model.Address", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("County");

                    b.Property<string>("FullStreetName");

                    b.Property<decimal>("Latitude");

                    b.Property<decimal>("Longitude");

                    b.Property<string>("PostStreetDirectionName");

                    b.Property<string>("PostalCode");

                    b.Property<string>("PreStreetDirectionName");

                    b.Property<string>("StateProvince");

                    b.Property<string>("Street1");

                    b.Property<string>("Street2");

                    b.Property<string>("StreetName");

                    b.Property<string>("StreetType");

                    b.HasKey("ID");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            City = "Dallas",
                            Country = "USA",
                            County = "Dallas",
                            Latitude = 1.23m,
                            Longitude = 2.32m,
                            PostalCode = "75202",
                            StateProvince = "TX",
                            Street1 = "1st Street",
                            StreetName = "Ross Ave"
                        },
                        new
                        {
                            ID = -2,
                            City = "Dallas",
                            Country = "USA",
                            County = "Dallas",
                            Latitude = 2.23m,
                            Longitude = 6.32m,
                            PostalCode = "75207",
                            StateProvince = "TX",
                            Street1 = "N Stemmons Fwy",
                            StreetName = "Stemmons Fwy"
                        });
                });

            modelBuilder.Entity("dataentry.Data.DBContext.Model.Broker", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Fax");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("License");

                    b.Property<string>("Phone");

                    b.HasKey("ID");

                    b.ToTable("Brokers");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            Email = "ben.s@test.com",
                            FirstName = "Ben",
                            LastName = "Stoke",
                            Phone = "123456678"
                        },
                        new
                        {
                            ID = -2,
                            Email = "Jam@test.com",
                            FirstName = "James",
                            LastName = "Anderson",
                            Phone = "6785673445"
                        },
                        new
                        {
                            ID = -3,
                            Email = "tja@test.com",
                            FirstName = "Tony",
                            LastName = "Ja",
                            Phone = "2223331111"
                        },
                        new
                        {
                            ID = -4,
                            Email = "tsilv12@test.com",
                            FirstName = "Silva",
                            LastName = "T",
                            Phone = "33322221111"
                        });
                });

            modelBuilder.Entity("dataentry.Data.DBContext.Model.Listing", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AddressID");

                    b.Property<string>("AvailableFrom");

                    b.Property<string>("CreatedAt");

                    b.Property<bool>("IsParent");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentListingID");

                    b.Property<string>("Status");

                    b.Property<string>("UpdatedAt");

                    b.Property<string>("UsageType");

                    b.HasKey("ID");

                    b.HasIndex("AddressID");

                    b.ToTable("Listings");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            AddressID = -1,
                            AvailableFrom = "10/10/2019",
                            CreatedAt = "10/09/2019",
                            IsParent = true,
                            Name = "Ross",
                            Status = "New",
                            UpdatedAt = "10/09/2019",
                            UsageType = "Office"
                        },
                        new
                        {
                            ID = -2,
                            AddressID = -1,
                            AvailableFrom = "10/11/2019",
                            CreatedAt = "10/09/2019",
                            IsParent = false,
                            Name = "Space-1",
                            ParentListingID = -1,
                            Status = "New",
                            UpdatedAt = "10/09/2019",
                            UsageType = "Office"
                        },
                        new
                        {
                            ID = -3,
                            AddressID = -1,
                            AvailableFrom = "03/11/2019",
                            CreatedAt = "03/09/2019",
                            IsParent = false,
                            Name = "Space-2",
                            ParentListingID = -1,
                            Status = "Closed",
                            UpdatedAt = "03/09/2019",
                            UsageType = "Office"
                        },
                        new
                        {
                            ID = -4,
                            AddressID = -2,
                            AvailableFrom = "07/04/2019",
                            CreatedAt = "07/01/2019",
                            IsParent = true,
                            Name = "WTC",
                            Status = "InProgress",
                            UpdatedAt = "07/01/2019",
                            UsageType = "Office"
                        },
                        new
                        {
                            ID = -5,
                            AddressID = -2,
                            AvailableFrom = "08/04/2019",
                            CreatedAt = "08/01/2019",
                            IsParent = false,
                            Name = "Space-1",
                            ParentListingID = -4,
                            Status = "InProgress",
                            UpdatedAt = "08/01/2019",
                            UsageType = "Office"
                        });
                });

            modelBuilder.Entity("dataentry.Data.DBContext.Model.ListingBroker", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BrokerID");

                    b.Property<int>("ListingID");

                    b.HasKey("ID");

                    b.HasIndex("BrokerID");

                    b.HasIndex("ListingID");

                    b.ToTable("ListingBrokers");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            BrokerID = -1,
                            ListingID = -1
                        },
                        new
                        {
                            ID = -2,
                            BrokerID = -2,
                            ListingID = -1
                        },
                        new
                        {
                            ID = -3,
                            BrokerID = -3,
                            ListingID = -4
                        },
                        new
                        {
                            ID = -4,
                            BrokerID = -4,
                            ListingID = -4
                        });
                });

            modelBuilder.Entity("dataentry.Data.DBContext.Model.ListingData", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Data")
                        .HasColumnType("jsonb");

                    b.Property<string>("DataType");

                    b.Property<string>("Language");

                    b.Property<int>("ListingID");

                    b.HasKey("ID");

                    b.HasIndex("ListingID");

                    b.ToTable("ListingData");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            Data = "{\"PrimaryKey\": \"CA-Plus-1111\"}",
                            DataType = "PrimaryKey",
                            Language = "en-US",
                            ListingID = -1
                        },
                        new
                        {
                            ID = -2,
                            Data = "{\"Highlights\": [{\"Highlight\": [{ \"CultureCode\": \"en-GB\", \"Text\": \"Air Conditioning\" }, { \"CultureCode\": \"es-ES\", \"Text\": \"Aire Acondicionado\" } ] }, { \"Highlight\": [{ \"CultureCode\": \"en-GB\", \"Text\": \"Excellent BREEAM Rating\" } ] }, { \"Highlight\": [{ \"CultureCode\": \"en-GB\", \"Text\": \"1:797 sq ft Parking Ratio\" } ] } ]}",
                            DataType = "Highlights",
                            Language = "en-US",
                            ListingID = -1
                        },
                        new
                        {
                            ID = -3,
                            Data = "{\"Photos\": [{\"ImageCaption\": \"Image.Photo-1\", \"ImageResources\": [{ \"Breakpoint\": \"Small\", \"Image.Height\": 480, \"Resource.Uri\": \"file://emea.cbre.net/Data/WebPlatform/ListingService/PRD/Agency365Data/OfficePLUS/photos/cbrrps-BOW120225_Photo_1_640x480.jpg\", \"Image.Width\": 640 }, { \"Breakpoint\": \"Medium\", \"Image.Height\": 960, \"Resource.Uri\": \"file://emea.cbre.net/Data/WebPlatform/ListingService/PRD/Agency365Data/OfficePLUS/photos/cbrrps-BOW120225_Photo_1_1280x960.jpg\", \"Image.Width\": 1280 }, { \"Breakpoint\": \"Large\", \"Image.Height\": 1920, \"Resource.Uri\": \"file://emea.cbre.net/Data/WebPlatform/ListingService/PRD/Agency365Data/OfficePLUS/photos/cbrrps-BOW120225_Photo_1_2560x1920.jpg\", \"Image.Width\": 2560 } ] }, { \"ImageCaption\": \"Image.Photo-3\", \"ImageResources\": [{ \"Image.Height\": 480, \"Resource.Uri\": \"file://emea.cbre.net/Data/WebPlatform/ListingService/PRD/Agency365Data/OfficePLUS/photos/cbrrps-BOW120225_Photo_3_640x480.jpg\", \"Image.Width\": 640 }, { \"Image.Height\": 960, \"Resource.Uri\": \"file://emea.cbre.net/Data/WebPlatform/ListingService/PRD/Agency365Data/OfficePLUS/photos/cbrrps-BOW120225_Photo_3_1280x960.jpg\", \"Image.Width\": 1280 }, { \"Image.Height\": 1920, \"Resource.Uri\": \"file://emea.cbre.net/Data/WebPlatform/ListingService/PRD/Agency365Data/OfficePLUS/photos/cbrrps-BOW120225_Photo_3_2560x1920.jpg\", \"Image.Width\": 2560 } ] } ]}",
                            DataType = "Photos",
                            Language = "en-US",
                            ListingID = -2
                        },
                        new
                        {
                            ID = -4,
                            Data = "{\"UnderOffer\": \"True\"}",
                            DataType = "UnderOffer",
                            Language = "en-US",
                            ListingID = -3
                        },
                        new
                        {
                            ID = -5,
                            Data = "{\"PrimaryKey\": \"CA-Plus-1111\"}",
                            DataType = "PrimaryKey",
                            Language = "en-US",
                            ListingID = -4
                        },
                        new
                        {
                            ID = -6,
                            Data = "{\"NewHome\": \"False\"}",
                            DataType = "NewHome",
                            Language = "en-US",
                            ListingID = -4
                        },
                        new
                        {
                            ID = -7,
                            Data = "{\"Highlights\": [ { \"Highlight\": [{ \"CultureCode\": \"en-GB\", \"Text\": \"Excellent BREEAM Rating\" } ] }, { \"Highlight\": [{ \"CultureCode\": \"en-GB\", \"Text\": \"B Rating EPC\" } ] } ]}",
                            DataType = "Highlights",
                            Language = "en-US",
                            ListingID = -4
                        },
                        new
                        {
                            ID = -8,
                            Data = "{\"Photos\": [{ \"ImageCaption\": \"DSC06470\", \"ImageResources\": [{ \"Breakpoint\": \"original\", \"Image.Height\": 235, \"Image.Width\": 314, \"Resource.Uri\": \"/resources/fileassets/CA-Plus-22169/b9f98dc7/DSC06470.JPG\", \"Source.Uri\": \"https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/CA-Plus-22169/b9f98dc7/DSC06470.JPG\" }, { \"Breakpoint\": \"small\", \"Image.Height\": 480, \"Image.Width\": 640, \"Resource.Uri\": \"/resources/fileassets/CA-Plus-22169/b9f98dc7/DSC06470_Photo_1_small.jpg\", \"Source.Uri\": \"https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/CA-Plus-22169/b9f98dc7/DSC06470.JPG\" }, { \"Breakpoint\": \"medium\", \"Image.Height\": 960, \"Image.Width\": 1280, \"Resource.Uri\": \"/resources/fileassets/CA-Plus-22169/b9f98dc7/DSC06470_Photo_1_medium.jpg\", \"Source.Uri\": \"https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/CA-Plus-22169/b9f98dc7/DSC06470.JPG\" }, { \"Breakpoint\": \"large\", \"Image.Height\": 1200, \"Image.Width\": 1600, \"Resource.Uri\": \"/resources/fileassets/CA-Plus-22169/b9f98dc7/DSC06470_Photo_1_large.jpg\", \"Source.Uri\": \"https://uatlistingssearchcbreeun.blob.core.windows.net/fileassets/CA-Plus-22169/b9f98dc7/DSC06470.JPG\" } ] } ]}",
                            DataType = "Photos",
                            Language = "en-US",
                            ListingID = -4
                        },
                        new
                        {
                            ID = -9,
                            Data = "{\"Brochures\": [{ \"Uri\": \"file://emea.cbre.net/Data/WebPlatform/ListingService/PRD/Agency365Data/OfficePLUS/Brochure/2_278296/Tempest%20eBrochure.pdf\", \"Culture\": \"en-GB\" }, { \"Uri\": \"file://emea.cbre.net/Data/WebPlatform/ListingService/PRD/Agency365Data/OfficePLUS/Brochure/2_278296/Tempest%20eBrochure01.pdf\", \"Culture\": \"en-GB\" }, { \"Uri\": \"file://emea.cbre.net/Data/WebPlatform/ListingService/PRD/Agency365Data/OfficePLUS/Brochure/2_278296/Tithebarn%20Project%20Leisure%20brochure%20Final.pdf\", \"Culture\": \"zh-CN\" } ]}",
                            DataType = "Brochures",
                            Language = "en-US",
                            ListingID = -5
                        });
                });

            modelBuilder.Entity("dataentry.Data.DBContext.Model.Listing", b =>
                {
                    b.HasOne("dataentry.Data.DBContext.Model.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID");
                });

            modelBuilder.Entity("dataentry.Data.DBContext.Model.ListingBroker", b =>
                {
                    b.HasOne("dataentry.Data.DBContext.Model.Broker", "Broker")
                        .WithMany("ListingBroker")
                        .HasForeignKey("BrokerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("dataentry.Data.DBContext.Model.Listing", "Listing")
                        .WithMany("ListingBroker")
                        .HasForeignKey("ListingID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("dataentry.Data.DBContext.Model.ListingData", b =>
                {
                    b.HasOne("dataentry.Data.DBContext.Model.Listing", "Listing")
                        .WithMany("ListingData")
                        .HasForeignKey("ListingID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
